一 集中式和分布式
     Linus一直痛恨的CVS及SVN都是集中式的版本控制系统，而Git是分布式版本控制系统，集中式和分布式版本控制系统有什么区别呢？

    先说集中式版本控制系统，版本库是集中存放在中央服务器的，而干活的时候，用的都是自己的电脑，所以要先从中央服务器取得最新的版本，然后开始干活，干完活了，再把自己的活推送给中央服务器。中央服务器就好比是一个图书馆，你要改一本书，必须先从图书馆借出来，然后回到家自己改，改完了，再放回图书馆。


    集中式版本控制系统最大的毛病就是必须联网才能工作，如果在局域网内还好，带宽够大，速度够快，可如果在互联网上，遇到网速慢的话，可能提交一个10M的文件就需要5分钟，这还不得把人给憋死啊。

    那分布式版本控制系统与集中式版本控制系统有何不同呢？首先，分布式版本控制系统根本没有“中央服务器”，每个人的电脑上都是一个完整的版本库，这样，你工作的时候，就不需要联网了，因为版本库就在你自己的电脑上。既然每个人电脑上都有一个完整的版本库，那多个人如何协作呢？比方说你在自己电脑上改了文件A，你的同事也在他的电脑上改了文件A，这时，你们俩之间只需把各自的修改推送给对方，就可以互相看到对方的修改了。

    和集中式版本控制系统相比，分布式版本控制系统的安全性要高很多，因为每个人电脑里都有完整的版本库，某一个人的电脑坏掉了不要紧，随便从其他人那里复制一个就可以了。而集中式版本控制系统的中央服务器要是出了问题，所有人都没法干活了。

   在实际使用分布式版本控制系统的时候，其实很少在两人之间的电脑上推送版本库的修改，因为可能你们俩不在一个局域网内，两台电脑互相访问不了，也可能今天你的同事病了，他的电脑压根没有开机。因此，分布式版本控制系统通常也有一台充当“中央服务器”的电脑，但这个服务器的作用仅仅是用来方便“交换”大家的修改，没有它大家也一样干活，只是交换修改不方便而已。
二 新建仓库及commit

   初始化一个Git仓库，使用git init命令。

   添加文件到Git仓库，分两步：

   第一步，使用命令git add <file>，注意，可反复多次使用，添加多个文件；

   第二步，使用命令git commit，完成。
   
三 status diff
   要随时掌握工作区的状态，使用git status命令。
   
四 gig log
   git log
   git log --pretty=oneline 

   如果git status告诉你有文件被修改过，用git diff可以查看修改内容
五 时光回穿机
    1.版本回退
	    @git --hard HEAD^(HEAD^^...)回退到上一个版本（上上一个..）
		@git --hard commit id 回退到某版本或前进到已经回退的某一版本
		1>HEAD指向的版本就是当前版本，因此，Git允许我们在版本的历史之间穿梭，使用命令git reset --hard commit_id。

        2>穿梭前，用git log可以查看提交历史，以便确定要回退到哪个版本。

        3>要重返未来，用git reflog查看命令历史，以便确定要回到未来的哪个版本
六 工作区和暂存区
    工作区：就是你在电脑里能看到的目录，比如我的mystudy文件夹就是一个工作区	
    版本库（Repository）:工作区有一个隐藏目录.git，这个不算工作区，而是Git的版本库
       Git的版本库里存了很多东西，其中最重要的就是称为stage（或者叫index）的暂存区，还有Git为我们自动创建的第一个分支master，以及指向master的一个指针叫HEAD	
	暂存区(stage):
	第一步是用git add把文件添加进去，实际上就是把文件修改添加到暂存区；

    第二步是用git commit提交更改，实际上就是把暂存区的所有内容提交到当前分支。

    因为我们创建Git版本库时，Git自动为我们创建了唯一一个master分支，所以，现在，git commit就是往master分支上提交更改。
七 管理修改
   git add 到暂存区 
   git commit 将暂存区修改提交
   git diff HEAD -- readme.txt命令可以查看工作区和版本库里面最新版本的区别
   
八 撤销修改
   git checkout 
   命令git checkout -- readme.txt意思就是，把readme.txt文件在工作区的修改全部撤销，这里有两种情况：

   一种是readme.txt自修改后还没有被放到暂存区，现在，撤销修改就回到和版本库一模一样的状态；

   一种是readme.txt已经添加到暂存区后，又作了修改，现在，撤销修改就回到添加到暂存区后的状态。   
撤销总结：
    场景1：当你改乱了工作区某个文件的内容，想直接丢弃工作区的修改时，用命令git checkout -- file。

    场景2：当你不但改乱了工作区某个文件的内容，还添加到了暂存区时，想丢弃修改，分两步，第一步用命令git reset HEAD file，就回到了场景1，第二步按场景1操作。

    场景3：已经提交了不合适的修改到版本库时，想要撤销本次提交，参考版本回退一节，不过前提是没有推送到远程库。
九 创建与合并分支
    
    git branch -b 分支名
    
    -b 相当于git branch 分支名  git checkout 分支名	
	
	git里 主分支master HEAD 指向当前分支,当切换到其它分支时，HEAD指向此分支
	
	查看分支：git branch

    创建分支：git branch <name>

    切换分支：git checkout <name>

    创建+切换分支：git checkout -b <name>

    合并某分支到当前分支：git merge <name>

    删除分支：git branch -d <name>
	
十 解决冲突
   
lt looks like git-am is in progress ,cannot rebase
   rm -rf .git/rebase.apply;